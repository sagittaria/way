# -*- coding: utf-8 -*-
from sys import argv

def checkFormat(exp):
    return 0

def calc(exp):
    return 0

if __name__ == "__main__":
    
    #print(argv[0]) #输出的是 main.py
    
    #所有允许的输入
    allowed = ('0','1','2','3','4','5','6','7','8','9','.','+','-','+','/','^','(',')',' ')
    
    #获取输入
    input = argv[1]
    
    #去掉空格
    exp = ""
    for ch in input:
        if(not (ch in allowed)):
            print("INPUT ERROR")
            exit()
        if ch!=" ":
            exp+=ch
    
    #
        
    print("reach")
    

"""
一、题目描述

请用Python3编写一个计算器的控制台程序，支持加减乘除、乘方、括号、小数点，运算符优先级为括号>乘方>乘除>加减，同级别运算按照从左向右的顺序计算。

二、输入描述

数字包括"0123456789"，小数点为"."，运算符包括：加("+")、减("-")、乘("*")、除("/")、乘方("^"，注：不是**！)、括号("()")
需要从命令行参数读入输入，例如提交文件为main.py，可以用python3 main.py "1+2-3+4"的方式进行调用，Java程序也是类似的，如果你的程序需要通过键盘输入，那么是不符合要求的，例如python使用input()来等待用户输入，这会因为自动评测时不会有用户输入所以不会有任何结果。
输入需要支持空格，即 python3 main.py "1     +     2      -     3    +    4" 也需要程序能够正确给出结果，Java程序也是类似的
所有测试用例中参与运算的非零运算数的绝对值范围保证在 10^9-10^(-10) 之内, 应该输出运算结果时非零运算结果绝对值也保证在该范围内
三、输出描述

数字需要支持小数点，输出结果取10位有效数字，有效数字位数不足时不能补0
对于不在输入描述内的输入，输出INPUT ERROR
对于格式不合法（例如括号不匹配等）的输入，输出 FORMAT ERROR
对于不符合运算符接收的参数范围（例如除0等）的输入，输出VALUE ERROR
对于2、3、4的情况，输出即可，不能抛出异常
同时满足2、3、4中多个条件时，以序号小的为准
四、样例

输入: 1 + 2 - 3 + 4

输出: 4

输入: 1 + 2 - 3 + 1 / 3

输出: 0.3333333333

输入: 1 + + 2

输出: FORMAT ERROR

输入: 1 / 0

输出: VALUE ERROR

输入: a + 1

输出: INPUT ERROR
"""